name: Deploy to Amazon ECR

on:
  workflow_call:
    inputs:
      dev_env:
        required: true
        type: string
    secrets:
      ecr_repository:
        required: true
      region:
        required: true
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true

jobs:
  deploy:
    name: Push ecr image
    runs-on: ubuntu-latest
    environment: ${{ inputs.dev_env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ secrets.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ecr_repository }}
          IMAGE_TAG: ${{ github.sha }}
          ENV_FILE: ${{ inputs.dev_env }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build --build-arg ENV_FILE=$ENV_FILE -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"